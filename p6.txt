https://github.com/devops-ds/your-maven-project
https://github.com/devops-ds/your-gradle-project.git
which mvn
/usr/bin/mvn clean install

if gradle
which gradle
/opt/gradle/gradle-8.13/bin/gradle build


post build actions
- For Maven Surefire/Failsafe: `**/target/surefire-reports/*.xml`
- For Gradle: `**/test-results/**/*.xml`




pipeline for maven

pipeline {
    agent any // Or specify a specific agent label

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from your GitHub repository
                git url: 'https://github.com/devops-ds/your-maven-project.git', branch: 'main' // Replace with your repo URL if different, adjust branch name if needed
                // If your repository is private, you'll need to add credentials here, e.g.:
                // git url: 'https://github.com/devops-ds/your-maven-project.git', branch: 'main', credentialsId: 'your-credential-id'
            }
        }

        stage('Build') {
            steps {
                // Execute Maven build using the 'mvn' command with the full path
                // To find the full path to your 'mvn' executable on Linux/macOS, open your terminal and run:
                // which mvn
                sh '/usr/bin/mvn clean package' // Replace with actual path
            }
        }

        stage('Test') {
            steps {
                // Optionally, separate test execution if needed
                // This step is often not strictly necessary if 'mvn clean package' already runs tests
                // sh '/path/to/your/maven/bin/mvn test' // Replace with actual path
                echo 'Tests are typically run during the Build stage with Maven.'
            }
        }
    }
    post {
        always {
            // Archive test reports
            junit '**/target/surefire-reports/*.xml'
        }
        success {
            echo 'Build and tests succeeded!'
        }
        failure {
            echo 'Build or tests failed.'
        }
        // Add other post conditions like 'unstable', 'changed' as needed
    }
}



pipeline for maven

pipeline {
    agent any // Or specify a specific agent label

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from your GitHub repository
                git url: 'https://github.com/devops-ds/your-gradle-project.git', branch: 'main' // Corrected URL
                // If your repository is private, you'll need to add credentials here, e.g.:
                // git url: 'https://github.com/devops-ds/your-gradle-project.git', branch: 'main', credentialsId: 'your-credential-id'
            }
        }

        stage('Build') {
            steps {
                // Run Gradle build using the wrapper
                sh './gradlew clean build'
            }
        }

        stage('Test') {
            steps {
                // Run tests (if not already run in the build stage)
                // This step is often not strictly necessary if './gradlew clean build' already runs tests
                sh './gradlew test'
            }
        }
    }
    post {
        always {
            // Archive test reports (modify the path according to your project structure)
            junit '**/build/test-results/test/*.xml'
        }
        success {
            echo 'Build and tests succeeded!'
        }
        failure {
            echo 'Build or tests failed.'
        }
        // Add other post conditions like 'unstable', 'changed' as needed
    }
}

